/*
 * Aspose.Diagram Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.diagram.api;
import com.aspose.cloud.diagram.client.ApiException;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class TestBase {

    protected static final String grantType = "client_credentials";
    protected static final String clientId = "yourClientId";
    protected static final String clientSecret = "yourClientSecret";

    private DiagramApi diagramApi;
    private StorageApi storageApi;

    private static final String sourceFolder = "/mnt/sdcard/";;
    private static final String storageTestFOLDER = "SDKTests\\Android";
    private static final String localTestSourceFile = "Source.vsd";

    public TestBase() throws ApiException {

    }

    protected DiagramApi GetDiagramApi() throws ApiException {
        if (diagramApi == null) {
            diagramApi = new DiagramApi(grantType, clientId, clientSecret);
        }
        return diagramApi;
    }

    protected StorageApi GetStorageApi() throws ApiException {
        if (storageApi == null) {
            storageApi = new StorageApi(grantType, clientId, clientSecret);
        }
        return storageApi;
    }

    protected String GetSourceFolder() {
        return sourceFolder;
    }

    protected String GetStorageTestFOLDER() {
        return storageTestFOLDER;
    }

    protected String GetLocalTestSourceFile() {
        return localTestSourceFile;
    }

    public static byte[] GetFileData(String filename) {
        try {
            File file = new File(sourceFolder + filename);
            FileInputStream fis = new FileInputStream(file);
            ByteArrayOutputStream bos = new ByteArrayOutputStream(1000);
            byte[] b = new byte[1000];
            int n;
            while ((n = fis.read(b)) != -1) {
                bos.write(b, 0, n);
            }
            fis.close();
            bos.close();
            return bos.toByteArray();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
}

